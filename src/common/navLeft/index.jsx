import React, { useEffect } from 'react'
import './index.css'
import { useState } from 'react'
import { NavLink, useHref, useOutletContext } from 'react-router-dom'

/* 导入context，接收App传下来的自己是否固定定位的数据 */
import { useContext } from 'react'
import { isDisplayContext } from '../../context/app'

export default function NavLeft() {
  const menuList = [
    { id: 1, title: '关注', url: '/following', dContent: 'M12.7568 1.3335C13.4239 1.3335 13.9641 1.86183 13.9983 2.52111L14 2.58746V6.34783V9.44263L13.7881 9.41059C13.6565 9.39071 13.5435 9.30673 13.4865 9.18654L11.8614 5.76125C11.7168 5.45652 11.2832 5.45652 11.1386 5.76125L9.51354 9.18654C9.45652 9.30673 9.34347 9.39071 9.21193 9.41059L5.77633 9.92991C5.45315 9.97876 5.32181 10.3736 5.55131 10.6063L8.04943 13.1394C8.13927 13.2305 8.18011 13.3591 8.1593 13.4853L7.90953 15.0002H5.42606H3.24324C2.57608 15.0002 2.03587 14.4718 2.00171 13.8125L2 13.7462V2.58746C2 1.91989 2.51869 1.37002 3.17696 1.33524L3.24324 1.3335H12.7568ZM7.33333 7.00017C7.33333 6.81608 7.18409 6.66684 7 6.66684H5C4.8159 6.66684 4.66666 6.81608 4.66666 7.00017V7.66684C4.66666 7.85093 4.8159 8.00017 5 8.00017H7C7.18409 8.00017 7.33333 7.85093 7.33333 7.66684V7.00017ZM9.66666 4.00017C9.85076 4.00017 10 4.14941 10 4.3335V5.00017C10 5.18426 9.85076 5.3335 9.66666 5.3335H5C4.8159 5.3335 4.66666 5.18426 4.66666 5.00017V4.3335C4.66666 4.14941 4.8159 4.00017 5 4.00017H9.66666Z' },
    { id: 2, title: '综合', url: '/recommended', dContent: 'M0.666016 8.00033C0.666016 12.0504 3.94926 15.3337 7.99935 15.3337C12.0494 15.3337 15.3327 12.0504 15.3327 8.00033C15.3327 3.95024 12.0494 0.666992 7.99935 0.666992C3.94926 0.666992 0.666016 3.95024 0.666016 8.00033ZM5.43709 11.0048L9.3392 9.34286L11.0037 5.43876C11.0397 5.35428 11.0393 5.25869 11.0025 5.17455C10.9288 5.00586 10.7323 4.92887 10.5636 5.00259L6.68535 6.69744L5.00087 10.565C4.96428 10.649 4.96389 10.7444 4.9998 10.8287C5.07193 10.9981 5.26772 11.0769 5.43709 11.0048Z' },
    { id: 3, title: '后端', url: '/backend', dContent: 'M2 2C1.44772 2 1 2.44772 1 3V11C1 11.5523 1.44772 12 2 12H14C14.5523 12 15 11.5523 15 11V3C15 2.44772 14.5523 2 14 2H2ZM4.5 7C4.22386 7 4 7.22386 4 7.5V9.5C4 9.77614 4.22386 10 4.5 10H5C5.27614 10 5.5 9.77614 5.5 9.5V7.5C5.5 7.22386 5.27614 7 5 7H4.5ZM7 5C7 4.72386 7.22386 4.5 7.5 4.5H8C8.27614 4.5 8.5 4.72386 8.5 5V9.5C8.5 9.77614 8.27614 10 8 10H7.5C7.22386 10 7 9.77614 7 9.5V5ZM10.5 6C10.2239 6 10 6.22386 10 6.5V9.5C10 9.77614 10.2239 10 10.5 10H11C11.2761 10 11.5 9.77614 11.5 9.5V6.5C11.5 6.22386 11.2761 6 11 6H10.5Z' },
    { id: 4, title: '前端', url: '/frontend', dContent: 'M2 2C1.44772 2 1 2.44772 1 3V6H15V3C15 2.44772 14.5523 2 14 2H2ZM15 7.3H1V13C1 13.5523 1.44772 14 2 14H14C14.5523 14 15 13.5523 15 13V7.3ZM8.65811 8.02566C8.92009 8.11298 9.06167 8.39614 8.97434 8.65811L7.97434 11.6581C7.88702 11.9201 7.60386 12.0617 7.34189 11.9743C7.07991 11.887 6.93833 11.6039 7.02566 11.3419L8.02566 8.34189C8.11298 8.07991 8.39614 7.93833 8.65811 8.02566ZM3.5 5C3.77614 5 4 4.77614 4 4.5C4 4.22386 3.77614 4 3.5 4C3.22386 4 3 4.22386 3 4.5C3 4.77614 3.22386 5 3.5 5ZM5.5 4.5C5.5 4.77614 5.27614 5 5 5C4.72386 5 4.5 4.77614 4.5 4.5C4.5 4.22386 4.72386 4 5 4C5.27614 4 5.5 4.22386 5.5 4.5ZM6.5 5C6.77614 5 7 4.77614 7 4.5C7 4.22386 6.77614 4 6.5 4C6.22386 4 6 4.22386 6 4.5C6 4.77614 6.22386 5 6.5 5ZM6.44721 8.77639C6.57071 9.02338 6.4706 9.32372 6.22361 9.44721L5.11803 10L6.22361 10.5528C6.4706 10.6763 6.57071 10.9766 6.44721 11.2236C6.32372 11.4706 6.02338 11.5707 5.77639 11.4472L3.77639 10.4472C3.607 10.3625 3.5 10.1894 3.5 10C3.5 9.81061 3.607 9.63748 3.77639 9.55279L5.77639 8.55279C6.02338 8.42929 6.32372 8.5294 6.44721 8.77639ZM9.77639 9.44721C9.5294 9.32372 9.42929 9.02338 9.55279 8.77639C9.67628 8.5294 9.97662 8.42929 10.2236 8.55279L12.2236 9.55279C12.393 9.63748 12.5 9.81061 12.5 10C12.5 10.1894 12.393 10.3625 12.2236 10.4472L10.2236 11.4472C9.97662 11.5707 9.67628 11.4706 9.55279 11.2236C9.42929 10.9766 9.5294 10.6763 9.77639 10.5528L10.882 10L9.77639 9.44721Z' },
    { id: 5, title: 'Android', url: '/android', dContent: 'M0.666016 8.00033C0.666016 12.0504 3.94926 15.3337 7.99935 15.3337C12.0494 15.3337 15.3327 12.0504 15.3327 8.00033C15.3327 3.95024 12.0494 0.666992 7.99935 0.666992C3.94926 0.666992 0.666016 3.95024 0.666016 8.00033ZM5.43709 11.0048L9.3392 9.34286L11.0037 5.43876C11.0397 5.35428 11.0393 5.25869 11.0025 5.17455C10.9288 5.00586 10.7323 4.92887 10.5636 5.00259L6.68535 6.69744L5.00087 10.565C4.96428 10.649 4.96389 10.7444 4.9998 10.8287C5.07193 10.9981 5.26772 11.0769 5.43709 11.0048Z' },
    { id: 6, title: 'iOS', url: '/ios', dContent: 'M11.822 8.4388C11.8045 6.66562 13.268 5.81556 13.3331 5.77312C12.5106 4.56956 11.2296 4.40506 10.7733 4.38581C9.68308 4.27556 8.64621 5.02763 8.09277 5.02763C7.54108 5.02763 6.68708 4.402 5.78277 4.41863C4.59452 4.43613 3.49858 5.10944 2.88696 6.17387C1.65233 8.3163 2.57064 11.4899 3.77421 13.2277C4.36221 14.0782 5.06352 15.0332 5.98402 14.9991C6.87039 14.9637 7.20596 14.4255 8.27739 14.4255C9.34883 14.4255 9.65027 14.9991 10.5887 14.9816C11.5425 14.9637 12.1471 14.1149 12.7311 13.2618C13.4062 12.2752 13.6845 11.3197 13.7006 11.2707C13.6796 11.2611 11.8404 10.5567 11.822 8.4388ZM10.0593 3.23563C10.548 2.64281 10.8779 1.82031 10.7878 1C10.0838 1.02888 9.23071 1.469 8.72583 2.06006C8.27258 2.58463 7.87621 3.422 7.98252 4.22613C8.76827 4.28737 9.57021 3.82669 10.0593 3.23563Z' },
    { id: 7, title: '人工智能', url: '/ai', dContent: 'M3 7C3 6.44772 3.44772 6 4 6H12C12.5523 6 13 6.44772 13 7V14C13 14.5523 12.5523 15 12 15H4C3.44772 15 3 14.5523 3 14V7ZM7 10.75C7 11.1642 6.66421 11.5 6.25 11.5C5.83579 11.5 5.5 11.1642 5.5 10.75C5.5 10.3358 5.83579 10 6.25 10C6.66421 10 7 10.3358 7 10.75ZM9.75 11.5C10.1642 11.5 10.5 11.1642 10.5 10.75C10.5 10.3358 10.1642 10 9.75 10C9.33579 10 9 10.3358 9 10.75C9 11.1642 9.33579 11.5 9.75 11.5Z' },
    { id: 8, title: '开发工具', url: '/freebie', dContent: 'M0.666016 8.00033C0.666016 12.0504 3.94926 15.3337 7.99935 15.3337C12.0494 15.3337 15.3327 12.0504 15.3327 8.00033C15.3327 3.95024 12.0494 0.666992 7.99935 0.666992C3.94926 0.666992 0.666016 3.95024 0.666016 8.00033ZM5.43709 11.0048L9.3392 9.34286L11.0037 5.43876C11.0397 5.35428 11.0393 5.25869 11.0025 5.17455C10.9288 5.00586 10.7323 4.92887 10.5636 5.00259L6.68535 6.69744L5.00087 10.565C4.96428 10.649 4.96389 10.7444 4.9998 10.8287C5.07193 10.9981 5.26772 11.0769 5.43709 11.0048Z' },
    { id: 9, title: '代码人生', url: '/career', dContent: 'M1 2C1 1.44772 1.44772 1 2 1H14C14.5523 1 15 1.44772 15 2V14C15 14.5523 14.5523 15 14 15H2C1.44772 15 1 14.5523 1 14V2ZM3 4.5C3 4.22386 3.22386 4 3.5 4H12.5C12.7761 4 13 4.22386 13 4.5V4.8C13 5.07614 12.7761 5.3 12.5 5.3H3.5C3.22386 5.3 3 5.07614 3 4.8V4.5ZM3.5 7C3.22386 7 3 7.22386 3 7.5V7.8C3 8.07614 3.22386 8.3 3.5 8.3H4.5C4.77614 8.3 5 8.07614 5 7.8V7.5C5 7.22386 4.77614 7 4.5 7H3.5ZM7 7.5C7 7.22386 7.22386 7 7.5 7H8.5C8.77614 7 9 7.22386 9 7.5V7.8C9 8.07614 8.77614 8.3 8.5 8.3H7.5C7.22386 8.3 7 8.07614 7 7.8V7.5ZM11.5 7C11.2239 7 11 7.22386 11 7.5V7.8C11 8.07614 11.2239 8.3 11.5 8.3H12.5C12.7761 8.3 13 8.07614 13 7.8V7.5C13 7.22386 12.7761 7 12.5 7H11.5ZM3 10.5C3 10.2239 3.22386 10 3.5 10H7.5C7.77614 10 8 10.2239 8 10.5V10.8C8 11.0761 7.77614 11.3 7.5 11.3H3.5C3.22386 11.3 3 11.0761 3 10.8V10.5ZM10.5 10C10.2239 10 10 10.2239 10 10.5V10.8C10 11.0761 10.2239 11.3 10.5 11.3H12.5C12.7761 11.3 13 11.0761 13 10.8V10.5C13 10.2239 12.7761 10 12.5 10H10.5Z' },
    { id: 10, title: '阅读', url: '/article', dContent: 'M0.666016 8.00033C0.666016 12.0504 3.94926 15.3337 7.99935 15.3337C12.0494 15.3337 15.3327 12.0504 15.3327 8.00033C15.3327 3.95024 12.0494 0.666992 7.99935 0.666992C3.94926 0.666992 0.666016 3.95024 0.666016 8.00033ZM5.43709 11.0048L9.3392 9.34286L11.0037 5.43876C11.0397 5.35428 11.0393 5.25869 11.0025 5.17455C10.9288 5.00586 10.7323 4.92887 10.5636 5.00259L6.68535 6.69744L5.00087 10.565C4.96428 10.649 4.96389 10.7444 4.9998 10.8287C5.07193 10.9981 5.26772 11.0769 5.43709 11.0048Z' },
  ]

  /* 1.解决任意路由刷新后被点击的菜单总是回到综合的问题---选出当前路由匹配的那个数据
  将里面的id作为点击时活跃id的初始值 */
  let inicalId
  const href = useHref()
  const activeModule = (menuList.filter((item) => {
    return item.url === href
  }))[0]
  if (activeModule) {
    inicalId = activeModule.id
  } else {
    inicalId = menuList[1].id
  }

  /* 控制字体颜色 --通过修改这个id和item.id对比，为true的就添加样式*/
  /* 当前活跃的菜单 */
  const [acticeId, setActiveId] = useState(-1)
  /* 当前被点击的菜单的id */
  const [focuseId, setFocuseId] = useState(inicalId)

  /* 鼠标经过，修改样式 */
  /* 设置为id -1就是所有的都没有样式 */
  const changeActive = (id) => {
    return () => {
      setActiveId(id)
    }
  }
  /* 鼠标点击修改样式 */
  const turnMenu = (id) => {
    return () => {
      setFocuseId(id)
    }
  }

  /* 接收context数据--showheader的时候定位留出header位置，否则不留 */
  const isDisplayHeader = useContext(isDisplayContext)

  return (
    <div className='NavLeft__div--imgbox'>
      <div
        className="NavLeft__div--scroll"
        style={{ top: isDisplayHeader ? 'calc(60px + 1.66rem)' : '1.66rem' }}>
        <div className='NavLeft__div--container'>
          <ul onMouseOut={changeActive(-1)}>
            {menuList.map((item) => {
              return <li key={item.id}>
                <NavLink
                  to={item.url}
                  className={'NavLeft__a--height ' + (acticeId === item.id ? 'NavLeft__a--active' : '') + ' ' + (focuseId === item.id ? 'NavLeft__a--bgcactive' : '')}
                  onMouseOver={changeActive(item.id)}
                  onClick={turnMenu(item.id)}
                >
                  <svg className={acticeId === item.id ? 'NavLeft--active' : ''} width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" data-v-4d63e546="" ><path fillRule="evenodd" clipRule="evenodd" d={item.dContent} fill="currentColor" data-v-4d63e546=""></path></svg>
                  <span className='NavLeft__span'>{item.title}
                  </span>
                </NavLink>
              </li>
            })}
          </ul>
        </div>
      </div>
    </div>
  )
}
